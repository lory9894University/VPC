MODULE main
VAR
	wantp : boolean;
	wantq : boolean;
	turn: 1 .. 2;
	p : process proc(wantp, wantq, turn, 1, 2);
	q : process proc(wantq, wantp, turn, 2, 1);
ASSIGN
	init(wantp) := FALSE; 
	init(wantq) := FALSE; 
	init(turn) := 1;

SPEC !EF( p.state = p8 & q.state = p8);

MODULE proc(wantp, wantq,turn,my_turn,other_turn)
VAR
	state : {p1, p2, p3, p4, p5, p6, p7, p8, p9, p10};
ASSIGN
	init(state) := p1;
	next(state) := 
	  case
		state = p1 : {p2, p1};
		state = p2 : p3;
		state = p3 & wantq: p4;
		state = p3 & !wantq: p8;
		state = p4 & (turn = other_turn): p5 ;
		state = p4 & !(turn = other_turn): p3 ;
		state = p5 : p6;
		state = p6 & (turn = my_turn): p7;
		state = p7 : p3;
		state = p8 : p9;
		state = p9 : p10;
		state = p10 : p1;
		TRUE : state;
	  esac;	
	next(wantp) := 
	  case
		state = p2 : TRUE;
		state = p5 : FALSE;
		state = p7 : TRUE;
		state = p10 : FALSE;
	 	TRUE : wantp;
	  esac;
	next(turn) :=
	  case 
		state = p9 : other_turn;
		TRUE : turn;
	  esac;
