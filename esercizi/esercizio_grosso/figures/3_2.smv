MODULE main
VAR
	turn : 1 .. 2;
	p : process proc(turn,2,1);
	q : process proc(turn,1,2);
ASSIGN
	init(turn) := 1; 

SPEC AG !(( p.state = s3 ) & (q.state = s3 ))
SPEC AG (( p.state = s2 ) -> (AF p.state = s3 ))
SPEC AG EF (( p.state = s1 )| ( q.state = s1 ))

LTLSPEC G !(p.state = s3 & q.state = s3)
LTLSPEC G (p.state = s2 -> F(p.state = s3))
LTLSPEC G F (( p.running) | ( q.running ) )

MODULE proc(turn,var_wait,var_set)
VAR
	state : {s1, s2, s3, s4};
ASSIGN
	init(state) := s1;
	next(state) := 
	  case
		state = s1 : {s2, s1};
		state = s2 & (turn = var_wait): s3;
		state = s3 : s4;
		state = s4 : s1;
		TRUE : state;
	  esac;	
	next(turn) := 
	  case
		state = s4 : var_set;
	 	TRUE : turn;
	  esac;
