<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan ack, send, send_ack, received;
clock time_elapsed, msg_time;
const int minTransmissionTime = 95;
const int maxTransmissionTime = 105;
const int elaboration_time_max = 10;
int[0,1] frameNr := 0;
int [0,1] ackNr := 0;</declaration>
	<template>
		<name x="5" y="5">Sender</name>
		<declaration>// Place local declarations here.
int [0,1] frame;
clock timer;
int timeout := 231;
//i valori di timeout &lt; 190 rendono il timeout sicuro, i valori sopra 230 lo rendono impossibli (a meno di messaggi persi), qeulli compresi lo rendono possibile.
clock elaboration_time;
</declaration>
		<location id="id0" x="-688" y="-17">
			<name x="-698" y="-51">send_msg</name>
			<label kind="invariant" x="-773" y="-68">elaboration_time &lt;= elaboration_time_max</label>
		</location>
		<location id="id1" x="-399" y="-17">
			<name x="-348" y="-25">wait</name>
		</location>
		<location id="id2" x="-399" y="-178">
			<name x="-409" y="-212">resend</name>
			<label kind="invariant" x="-527" y="-229">elaboration_time &lt;= elaboration_time_max</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-221" y="-153">send!</label>
			<label kind="assignment" x="-238" y="-136">timer := 0</label>
			<nail x="-238" y="-127"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-595" y="85">ack?</label>
			<label kind="assignment" x="-646" y="102">elaboration_time := 0</label>
			<nail x="-399" y="102"/>
			<nail x="-689" y="102"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-399" y="-131">timer &gt;= timeout</label>
			<label kind="assignment" x="-561" y="-119">elaboration_time := 0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-586" y="-34">send!</label>
			<label kind="assignment" x="-603" y="-17">timer :=0,
frameNr = 1- frameNr,
time_elapsed := 0</label>
		</transition>
	</template>
	<template>
		<name>Receiver</name>
		<declaration>clock elaboration_time;</declaration>
		<location id="id3" x="0" y="0">
			<name x="-10" y="-34">receive</name>
		</location>
		<location id="id4" x="255" y="0">
			<name x="245" y="-34">acknowledge</name>
			<label kind="invariant" x="272" y="-8">elaboration_time &lt;= elaboration_time_max</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="76" y="127">ackNr == frameNr</label>
			<label kind="synchronisation" x="93" y="76">send_ack!</label>
			<nail x="127" y="127"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="68" y="-178">ackNr != frameNr</label>
			<label kind="synchronisation" x="85" y="-102">send_ack!</label>
			<label kind="assignment" x="68" y="-153">ackNr = 1 - ackNr</label>
			<nail x="119" y="-136"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="93" y="8">received?</label>
			<label kind="assignment" x="59" y="-17">elaboration_time := 0</label>
		</transition>
	</template>
	<template>
		<name>Channel</name>
		<location id="id5" x="-212" y="-229">
			<name x="-204" y="-221">ready</name>
		</location>
		<location id="id6" x="-347" y="-118">
			<name x="-390" y="-93">to_sender</name>
			<label kind="invariant" x="-433" y="-59">msg_time &lt;= maxTransmissionTime</label>
		</location>
		<location id="id7" x="-76" y="-348">
			<name x="-86" y="-382">to_receiver</name>
			<label kind="invariant" x="-127" y="-399">msg_time &lt;= maxTransmissionTime</label>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-323" y="-110">msg_time &gt;= minTransmissionTime</label>
			<label kind="synchronisation" x="-306" y="-136">received!</label>
			<nail x="-228" y="-118"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-357" y="-255">send?</label>
			<label kind="assignment" x="-382" y="-272">msg_time := 0</label>
			<nail x="-331" y="-229"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="-297" y="-416">msg_time &gt;= minTransmissionTime</label>
			<label kind="synchronisation" x="-203" y="-390">ack!</label>
			<nail x="-195" y="-348"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-145" y="-212">send_ack?</label>
			<label kind="assignment" x="-161" y="-229">msg_time := 0</label>
			<nail x="-85" y="-229"/>
		</transition>
	</template>
	<system>sender = Sender();
receiver = Receiver();
channel = Channel();

system sender, receiver, channel;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] sender.send_msg imply ((time_elapsed &gt;= 2 * minTransmissionTime &amp;&amp; time_elapsed &lt;= 2 * (maxTransmissionTime + elaboration_time_max)) || time_elapsed &lt;= elaboration_time_max)</formula>
			<comment>è sempre vero che se invio un messaggio 
falso perchè potrei perdere tutti i messaggi, esecuzione non fair.</comment>
		</query>
		<query>
			<formula>sender.wait --&gt; sender.send_msg</formula>
			<comment></comment>
		</query>
		<query>
			<formula>sender.wait --&gt; receiver.acknowledge</formula>
			<comment>potrei perdere tutti i messaggi, esecuzione non fair</comment>
		</query>
		<query>
			<formula>channel.to_sender --&gt; channel.to_receiver</formula>
			<comment>questa me la aspettavo falsa,</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (sender.wait &amp;&amp; (time_elapsed &gt;= 2* minTransmissionTime &amp;&amp; time_elapsed &lt;= 2* (maxTransmissionTime + elaboration_time_max)))</formula>
			<comment>Esiste un path per cui il sender è tornato alla posizione iniziale (cioè ha inviato un messaggio e ricevuto un ack) entro il tempo limite</comment>
		</query>
		<query>
			<formula>sender.send_msg --&gt; (sender.timer &gt;= 2* minTransmissionTime &amp;&amp; sender.timer &lt;= 2* (maxTransmissionTime + elaboration_time_max) || time_elapsed &lt;= elaboration_time_max ) </formula>
			<comment>il path di cui parlavo nella query prima è un path che sicuramente porta a sender.send_msg. Se sono in sender.send_msg ho ottenuto l'ack entro l'intervallo di tempo.</comment>
		</query>
		<query>
			<formula>A[] sender.send_msg imply (frameNr == ackNr)</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
